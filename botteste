#!/bin/bash

clear
#--------@LSVPN-----------#
source ShellBot2.sh
ShellBot.init --token "5361713081:AAHt7V0qVDso6Yf0-wCgJK76ZqQ7DvJJ9x8" --monitor --flush
ShellBot.username

# - Funcao menu
menu() {
  local msg
  msg="=×=×=×=×=×=×=×=×=×=×=×=×=×=×=×=×=\n"
  msg+="<b>-------------REVENDA-------------</b>\n"
  msg+="=×=×=×=×=×=×=×=×=×=×=×=×=×=×=×=×=\n\n"
  ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
    --text "$(echo -e $msg)" \
    --reply_markup "$keyboard1" \
    --parse_mode html
  return 0
}

# - Funcao para verificar permissão do usuário
verificar_permissao() {
  local usuario="$1"
  local permissao=$(grep -w "$usuario" permitidos)
  if [[ -n "$permissao" ]]; then
    local ultimo_teste=$(grep -w "$usuario" lista | tail -n 1)
    if [[ -z "$ultimo_teste" || $(($(date +%s) - $ultimo_teste)) -ge 259200 ]]; then
      return 0  # Permissão concedida
    fi
  fi
  return 1  # Permissão negada
}

# - Funcao para verificar pagamento do usuário
verificar_pagamento() {
  local usuario="$1"
  local pagamento=$(grep -w "$usuario" pagamentos)
  if [[ -n "$pagamento" ]]; then
    return 0  # Pagamento verificado
  fi
  return 1  # Pagamento não verificado
}

# - Funcao para criar teste SSH
criarteste() {
  local usuario=${callback_query_from_id}
  if verificar_permissao "$usuario"; then
    usuario=$(echo teste$(( RANDOM% + 99999 )))
    senha=$((RANDOM% + 99999))
    limite='1'
    tempo='2'
    tuserdate=$(date '+%C%y/%m/%d' -d " +1 days")
    useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
    (echo "$senha";echo "$senha") | passwd $usuario > /dev/null 2>&1
    echo "$senha" > /etc/SSHPlus/senha/$usuario
    echo "$usuario $limite" >> /root/usuarios.db
    echo "#!/bin/bash
pkill -f "$usuario"
userdel --force $usuario
grep -v ^$usuario[[:space:]] /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
rm /etc/SSHPlus/senha/$usuario > /dev/null 2>&1
rm -rf /etc/SSHPlus/userteste/$usuario.sh" > /etc/SSHPlus/userteste/$usuario.sh
    chmod +x /etc/SSHPlus/userteste/$usuario.sh
    at -f /etc/SSHPlus/userteste/$usuario.sh now + $tempo hour > /dev/null 2>&1
    echo ${callback_query_from_id} > lista
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
      --text "<b>TESTE CRIADO COM SUCESSO!</b>\n\nUsuário: <code>$usuario</code>\nSenha: <code>$senha</code>\n\n- Revenda SSHPlus" \
      --parse_mode html
  else
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
      --text "VOCÊ NÃO TEM PERMISSÃO PARA GERAR UM TESTE AGORA" \
      --parse_mode html
  fi
  return 0
}

# - Funcao para criar usuário com pagamento via Pix
criaruser() {
  local usuario=${callback_query_from_id}
  if verificar_pagamento "$usuario"; then
    usuario=$(echo user$(( RANDOM% + 99999 )))
    senha=$((RANDOM% + 99999))
    limite='0'
    tempo='30'
    tuserdate=$(date '+%C%y/%m/%d' -d " +30 days")
    useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
    (echo "$senha";echo "$senha") | passwd $usuario > /dev/null 2>&1
    echo "$senha" > /etc/SSHPlus/senha/$usuario
    echo "$usuario $limite" >> /root/usuarios.db
    echo "#!/bin/bash
pkill -f "$usuario"
userdel --force $usuario
grep -v ^$usuario[[:space:]] /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
rm /etc/SSHPlus/senha/$usuario > /dev/null 2>&1" > /etc/SSHPlus/$usuario.sh
    chmod +x /etc/SSHPlus/$usuario.sh
    at -f /etc/SSHPlus/$usuario.sh now + $tempo day > /dev/null 2>&1
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
      --text "<b>USUÁRIO CRIADO COM SUCESSO!</b>\n\nUsuário: <code>$usuario</code>\nSenha: <code>$senha</code>\n\n- Revenda SSHPlus" \
      --parse_mode html
  else
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
      --text "VOCÊ DEVE REALIZAR O PAGAMENTO VIA PIX ANTES DE GERAR UM SSH MENSAL" \
      --parse_mode html
  fi
  return 0
}

# - Acao de callback para o menu
bot_menu() {
  ShellBot.CallbackQuery.CancelledMessage="Ação cancelada!"
  ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]}

  case ${callback_query_data[$id]} in
    teste)
      criarteste
      ;;
    mensal)
      criaruser
      ;;
    cancelar)
      menu
      ;;
  esac

  return 0
}

# - Monitora as acoes do usuario
while :
do
  ShellBot.getUpdates --limit 100 --offset $(ShellBot.OffsetNext) --timeout 30
  for id in $(ShellBot.ListUpdates)
  do
    if [ ${message_entities_type[$id]} == bot_command ]; then
      case ${message_text[$id]} in
        '/start')
          menu
          ;;
        '/menu')
          menu
          ;;
      esac
    elif [ ${message_entities_type[$id]} == callback_query ]; then
      bot_menu
    fi
  done
done

