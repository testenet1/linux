#!/bin/bash

clear
#--------@LSVPN-----------#
source ShellBot2.sh
source configbot.txt

ShellBot.init --token $TOKEN --monitor --flush
ShellBot.username

# - Funcao menu
menu() {
        local msg
	msg="✌️😃 Olá <b>${message_from_first_name[$id]}</b>, bem vindo(a)!\n"
	msg+="▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\n"
        msg+="Gere seu teste agora mesmo!\n\n"
	msg+="<b>Comando Principal:</b>/teste\n\n"
	msg+="▬▬▬▬▬▬🚀 <b>LSVPN</b> 🚀▬▬▬▬▬▬\n\n"
        msg+="▬▬▬▬▬⭐ <b>BENEFICIOS</b> ⭐▬▬▬▬▬\n\n"
        msg+="✅ TESTE SEM COMPROMISSO \n"
        msg+="💸 ECONOMIZE \n"
        msg+="🥷 NAVEGUE ANONIMAMENTE \n"
        msg+="❌ SEM MULTA \n"
        msg+="❌ SEM FIDELIDADE \n"
	msg+="👨‍💻 SUPORTE 24H ESPECIALIZADO \n"
        msg+="📲 FUNCIONA COM APP PRÓPRIO \n"
        msg+="🚀 SERVIDORES DE ALTA VELOCIDADE\n"
        msg+="♾️ <b>TRÁFEGO ILIMITADO</b>\n\n"
        msg+="▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n"
        msg+="<b>🟣VIVO 🔵TIM</b>\n\n"
	msg+="<b>Comando Principal:</b> /teste\n\n"

	[[ -n ${message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${message_id[$id]}
	[[ -n ${callback_query_message_message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${callback_query_message_message_id[$id]}
	
	ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --parse_mode html
	
        return 0
}
teste() {
        local msg
        msg="▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n"
	msg+="<b>🤖 SEJA BEM VINDO AO LSVPNBOT! 🤖</b>\n"
	msg+="▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\n"
        msg+="Gere seu teste agora mesmo!\n"

	if [[ -n ${callback_query_id[$id]} ]]; then
		[[ -n ${message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${message_id[$id]}
		[[ -n ${callback_query_message_message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${callback_query_message_message_id[$id]}

        	# Envia mensagem utilizando o callback_query_message_chat_id
		ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
		    --text "$(echo -e $msg)" \
		    --reply_markup "$keyboard1" \
		    --parse_mode html
	else
		# Envia mensagem utilizando o chat_id
		ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
		    --text "$(echo -e $msg)" \
		    --reply_markup "$keyboard1" \
		    --parse_mode html
    	fi
	return 0
}



# - funcao criar ssh
criarteste() {
    if grep -q ${callback_query_from_id} lista; then
        created_date=$(grep -w ${callback_query_from_id} lista | cut -d ' ' -f 2)
        current_date=$(date +%s)
        if (( current_date - created_date > 3 * 24 * 60 * 60 )); then
            sed -i "/${callback_query_from_id}/d" lista
        else
            ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
                --text "🚫 Você já gerou um SSH recentemente. 📞 Entre em contato com o administrador."
            return 0
        fi
    fi

    if ! grep -q ${callback_query_from_id} lista; then
        echo "${callback_query_from_id} $(date +%s)" >> lista

        usuario=$(echo teste$(( RANDOM % 99999 )))
        senha=$(( RANDOM % 99999 ))
        limite='1'
        tempo='1'
        tuserdate=$(date '+%C%y/%m/%d' -d " +2 days")
        useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
        (echo "$senha"; echo "$senha") | passwd $usuario > /dev/null 2>&1
        echo "$senha" > /etc/SSHPlus/senha/$usuario
        echo "$usuario $limite" >> /root/usuarios.db
        echo "#!/bin/bash
pkill -f "$usuario"
userdel --force $usuario
grep -v ^$usuario[[:space:]] /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
rm /etc/SSHPlus/senha/$usuario > /dev/null 2>&1
rm -rf /etc/SSHPlus/userteste/$usuario.sh" > /etc/SSHPlus/userteste/$usuario.sh
        chmod +x /etc/SSHPlus/userteste/$usuario.sh
        at -f /etc/SSHPlus/userteste/$usuario.sh now + $tempo hour > /dev/null 2>&1
        echo ${callback_query_from_id} >> lista

        # - ENVIA O SSH
        ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
            --text "$(echo -e "✅ <b>Criado com sucesso</b> ✅\n\nSERVIDOR: TESTE\nUSUARIO: <code>$usuario</code>\nSENHA: <code>$senha</code>\n\n⏳ Expira em: $tempo Hora")" \
            --parse_mode html
        return 0
    fi
}

criartestebr() {
    # Envia uma notificação em resposta ao botão pressionado.
    ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
							--text "TESTE SERVIDOR BR"
							
    if grep -q ${callback_query_from_id} lista; then
        created_date=$(grep -w ${callback_query_from_id} lista | cut -d ' ' -f 2)
        current_date=$(date +%s)
        if (( current_date - created_date > 3 * 24 * 60 * 60 )); then
            sed -i "/${callback_query_from_id}/d" lista
        else
            ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
                --text "🚫 Você já gerou um SSH recentemente no servidor LS BR.\n📞 Entre em contato com o administrador ou adquira seu plano agora!"
            return 0
        fi
    fi

    if ! grep -q ${callback_query_from_id} lista || grep -q ${callback_query_from_id} admin; then
    	
	if grep -q ${callback_query_from_id} admin; then
		ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
				    --text "$(echo -e "Olá <b>ADMIN</b>!👨🏽‍💻\nEstou criando seu teste no servidor LS BR...\n")" \
				    --parse_mode html
	else
		ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
				    --text "$(echo -e "Olá <b>${callback_query_from_first_name}</b>\nEstou criando seu teste no servidor LS BR...\n")" \
				    --parse_mode html
	fi

        usuario=$(echo teste$(( RANDOM % 9999 )))
        senha=$(( RANDOM % 9999 + 1000 ))
        limite='1'
        tempo='1'
        tuserdate=$(date '+%C%y/%m/%d' -d " +2 days")

        # Comandos executados no servidor remoto via SSH
	if sshpass -p "$senha_server" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server true; then
		echo "Conexão bem-sucedida"
		sshpass -p "$senha_server" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server sshpass -p "$senha_server2" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server2 
		"/usr/sbin/useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
		(echo "$senha"; echo '$senha') | passwd $usuario > /dev/null 2>&1
		echo "$senha" > /etc/SSHPlus/senha/$usuario
		echo "$usuario $limite" >> /root/usuarios.db
		cat <<-EOF > /etc/SSHPlus/userteste/$usuario.sh
			#!/bin/bash
			# USUARIO TESTE
			pkill -f $usuario
			userdel --force $usuario
			grep -v ^$usuario[[:space:]] /root/usuarios.db > /tmp/ph
			cat /tmp/ph > /root/usuarios.db
			rm /etc/SSHPlus/senha/$usuario > /dev/null 2>&1
			rm -rf /etc/SSHPlus/userteste/$usuario.sh > /etc/SSHPlus/userteste/$usuario.sh
		EOF
		chmod +x /etc/SSHPlus/userteste/$usuario.sh;
		at -f /etc/SSHPlus/userteste/$usuario.sh now + $tempo hour > /dev/null 2>&1"
		
		# - ENVIA O SSH
		ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
			--text "$(echo -e "✅ <b>Criado com sucesso</b> ✅\n\nSERVIDOR LS BR\nUSUARIO: <code>$usuario</code>\nSENHA: <code>$senha</code>\n\n⏳ Expira em: $tempo Hora")" \
			--parse_mode html
			
		# - ENVIA O ID PRA LISTA E ENVIA MSG PRO GRUPO DE ATIVIDADES
		if ! grep -q ${callback_query_from_id} admin; then
			echo "${callback_query_from_id} $(date +%s)" >> lista
			ShellBot.sendMessage --chat_id $chatID \
				--text "▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nNovo Teste gerado por um usuário comum no servidor LS BR!\nNome:  ${callback_query_from_first_name}\nUser: @${callback_query_from_username}\nID: <code>${callback_query_from_id}</code>" \
				--parse_mode html
			ShellBot.sendMessage --chat_id $chatID \
				--text "$(echo -e "<b>🕵 Dados do teste gerado:</b>\n\n✅ <b>Criado com sucesso</b> ✅\n\nSERVIDOR LS BR\nUSUARIO: <code>$usuario</code>\nSENHA: <code>$senha</code>\n\n⏳ Expira em: $tempo Hora")" \
				--parse_mode html
		fi
			
		return 0
	else
		ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
			--text "😞 ERRO ao criar usuário, tente novamente mais tarde!" \
			--parse_mode html
		return 0
	fi 
    fi
}

criartestebr2() {
    # Envia uma notificação em resposta ao botão pressionado.
    ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
							--text "TESTE SERVIDOR BR 2 PREMIUM"
							
    if grep -q ${callback_query_from_id} lista2; then
        created_date=$(grep -w ${callback_query_from_id} lista2 | cut -d ' ' -f 2)
        current_date=$(date +%s)
        if (( current_date - created_date > 3 * 24 * 60 * 60 )); then
            sed -i "/${callback_query_from_id}/d" lista2
        else
            ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
                --text "🚫 Você já gerou um SSH recentemente no servidor LS BR 2 PREMIUM.\n📞 Entre em contato com o administrador ou adquira seu plano agora!"
            return 0
        fi
    fi

    if ! grep -q ${callback_query_from_id} lista2 || grep -q ${callback_query_from_id} admin; then
    	
	if grep -q ${callback_query_from_id} admin; then
		ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
				    --text "$(echo -e "Olá <b>ADMIN</b>!👨🏽‍💻\nEstou criando seu teste no servidor LS BR 2 PREMIUM...\n")" \
				    --parse_mode html
	else
		ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
				    --text "$(echo -e "Olá <b>${callback_query_from_first_name}</b>\nEstou criando seu teste no servidor LS BR 2 PREMIUM...\n")" \
				    --parse_mode html
	fi

        usuario=$(echo teste$(( RANDOM % 9999 )))
        senha=$(( RANDOM % 9999 + 1000 ))
        limite='1'
        tempo='1'
        tuserdate=$(date '+%C%y/%m/%d' -d " +2 days")

        # Comandos executados no servidor remoto via SSH
	if sshpass -p "$senha_server2" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server2 true; then
		echo "Conexão bem-sucedida"
		sshpass -p "$senha_server2" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server2
		"/usr/sbin/useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
		(echo "$senha"; echo '$senha') | passwd $usuario > /dev/null 2>&1
		echo "$senha" > /etc/SSHPlus/senha/$usuario
		echo "$usuario $limite" >> /root/usuarios.db
		cat <<-EOF > /etc/SSHPlus/userteste/$usuario.sh
			#!/bin/bash
			# USUARIO TESTE
			pkill -f $usuario
			userdel --force $usuario
			grep -v ^$usuario[[:space:]] /root/usuarios.db > /tmp/ph
			cat /tmp/ph > /root/usuarios.db
			rm /etc/SSHPlus/senha/$usuario > /dev/null 2>&1
			rm -rf /etc/SSHPlus/userteste/$usuario.sh > /etc/SSHPlus/userteste/$usuario.sh
		EOF
		chmod +x /etc/SSHPlus/userteste/$usuario.sh;
		at -f /etc/SSHPlus/userteste/$usuario.sh now + $tempo hour > /dev/null 2>&1"
		
		# - ENVIA O SSH
		ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
			--text "$(echo -e "✅ <b>Criado com sucesso</b> ✅\n\nSERVIDOR LS BR 2 PREMIUM\nUSUARIO: <code>$usuario</code>\nSENHA: <code>$senha</code>\n\n⏳ Expira em: $tempo Hora")" \
			--parse_mode html
		
		# - ENVIA O ID PRA LISTA E ENVIA MSG PRO ADM
		if ! grep -q ${callback_query_from_id} admin; then
			echo "${callback_query_from_id} $(date +%s)" >> lista2
			ShellBot.sendMessage --chat_id $chatID \
				--text "▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nNovo Teste gerado por um usuário comum no servidor LS BR 2 PREMIUM!\nNome:  ${callback_query_from_first_name}\nUser: @${callback_query_from_username}\nID: <code>${callback_query_from_id}</code>" \
				--parse_mode html
			ShellBot.sendMessage --chat_id $chatID \
				--text "$(echo -e "<b> 🕵🏻‍♂️ Dados do teste gerado: </b>\n\n✅ <b>Criado com sucesso</b> ✅\n\nSERVIDOR LS BR 2 PREMIUM\nUSUARIO: <code>$usuario</code>\nSENHA: <code>$senha</code>\n\n⏳ Expira em: $tempo Hora")" \
				--parse_mode html
		fi	
		return 0
	else
		ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
			--text "😞 ERRO ao criar usuário, tente novamente mais tarde!" \
			--parse_mode html
		return 0
	fi 
    fi
}

comprar() {
	local msg
	msg="▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n"
	msg+="   <b>💲💳 MENU DE COMPRA 💳💲</b>\n"
	msg+="▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\n"
	msg+="<b>Escolha o plano:</b>\n"

	# Envia uma notificação em resposta ao botão pressionado.
	ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
							--text "Comprar Acesso"
	
	[[ -n ${message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${message_id[$id]}
	[[ -n ${callback_query_message_message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${callback_query_message_message_id[$id]}

							
	# Envia mensagem
	ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--reply_markup "$keyboard2" \
							--parse_mode html
							
	# retorno
	return 0
}

lsandroid() {
	local msg
	msg="▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n"
	msg+="       <b>💳 PAGAMENTO 💳</b>\n"
	msg+="▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\n"
	msg+="       <b>LS ANDROID MENSAL</b>\n"
	msg+="       VALOR: 19,99 BRL\n"
	msg+="       Período: 30 dias\n"
	msg+="       <b>Chave PIX EMAIL:</b>\n"
	msg+="\n"
	msg+="<pre>       testenetssh@outlook.com</pre>\n"
	msg+="\n"
	msg+="Envie o comprovante:\n"

	
	# Envia uma notificação em resposta ao botão pressionado.
	ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
							--text "LS ANDROID MENSAL"
							
	[[ -n ${message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${message_id[$id]}
	[[ -n ${callback_query_message_message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${callback_query_message_message_id[$id]}


							
	# Envia mensagem
	ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
							--text "<b>🟠 LS ANDROID MENSAL 🟠</b>\n" \
							--parse_mode html
	
	# Envia foto
	ShellBot.sendPhoto --chat_id ${callback_query_message_chat_id[$id]} \
							--photo @/etc/pics/lsandroid.png \
							--parse_mode html
	
	# Envia mensagem
	ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--reply_markup "$keyboard3" \
							--parse_mode html
						
	# retorno
	return 0
}

lsandroidp() {
	local msg
	msg="▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n"
	msg+="<b>💳 PAGAMENTO 💳</b>\n"
	msg+="▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\n"
	msg+="<b>LS ANDROID MENSAL PREMIUM</b>\n"
	msg+="VALOR: 24,99 BRL\n"
	msg+="Período: 30 dias\n"
	msg+="Chave PIX EMAIL:\n\n"
	msg+="<pre>testenetssh@outlook.com</pre>\n\n"
	msg+="Envie o comprovante:\n"
	
	# Envia uma notificação em resposta ao botão pressionado.
	ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
							--text "LS ANDROID MENSAL PREMIUM"
	
	[[ -n ${message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${message_id[$id]}
	[[ -n ${callback_query_message_message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${callback_query_message_message_id[$id]}


	# Envia mensagem
	ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
							--text "<b>🟣 LS ANDROID MENSAL PREMIUM 🟣</b>\n" \
							--parse_mode html
	
	# Envia foto
	ShellBot.sendPhoto --chat_id ${callback_query_message_chat_id[$id]} \
							--photo @/etc/pics/lsandroidpremium.png \
							--parse_mode html
	
	# Envia mensagem
	ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--reply_markup "$keyboard3" \
							--parse_mode html
						
	# retorno
	return 0
}


lsandroidplus() {
	local msg
	msg="▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n"
	msg+="       <b>💳 PAGAMENTO 💳</b>\n"
	msg+="▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\n"
	msg+="       <b>LS ANDROID MENSAL PLUS</b>\n"
	msg+="       VALOR: 34,99 BRL\n"
	msg+="       Período: 30 dias\n"
	msg+="       <b>Chave PIX EMAIL:</b>\n"
	msg+="\n"
	msg+="<pre>       testenetssh@outlook.com</pre>\n"
	msg+="\n"
	msg+="Envie o comprovante:\n"
	
	# Envia uma notificação em resposta ao botão pressionado.
	ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
							--text "LS ANDROID MENSAL PLUS"
	
	[[ -n ${message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${message_id[$id]}
	[[ -n ${callback_query_message_message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${callback_query_message_message_id[$id]}

	
	# Envia mensagem
	ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
							--text "<b>🔵 LS ANDROID MENSAL PLUS 🔵</b>\n" \
							--parse_mode html
	
	# Envia foto
	ShellBot.sendPhoto --chat_id ${callback_query_message_chat_id[$id]} \
							--photo @/etc/pics/lsandroidplus.png \
							--parse_mode html
	
	# Envia mensagem
	ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--reply_markup "$keyboard3" \
							--parse_mode html
						
	# retorno
	return 0
}



lsandroidplusp() {
	local msg
	msg="▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n"
	msg+="       <b>💳 PAGAMENTO 💳</b>\n"
	msg+="▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\n"
	msg+="       <b>LS ANDROID MENSAL PLUS PREMIUM</b>\n"
	msg+="       VALOR: 39,99 BRL\n"
	msg+="       Período: 30 dias\n"
	msg+="       <b>Chave PIX EMAIL:</b>\n"
	msg+="\n"
	msg+="<pre>       testenetssh@outlook.com</pre>\n"
	msg+="\n"
	msg+="Envie o comprovante:\n"
	
	# Envia uma notificação em resposta ao botão pressionado.
	ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
							--text "LS ANDROID MENSAL PLUS PREMIUM"
							
	[[ -n ${message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${message_id[$id]}
	[[ -n ${callback_query_message_message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${callback_query_message_message_id[$id]}
	
	
	# Envia mensagem
	ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
							--text "<b>🔵 LS ANDROID MENSAL PLUS PREMIUM</b>\n" \
							--parse_mode html
	
	# Envia foto
	ShellBot.sendPhoto --chat_id ${callback_query_message_chat_id[$id]} \
							--photo @/etc/pics/lsandroidplusp.png \
							--parse_mode html
	
	# Envia mensagem
	ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--reply_markup "$keyboard3" \
							--parse_mode html
						
	# retorno
	return 0
}

#enviar app
enviarapp() {
    ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
        --text "♻️ ENVIANDO APLICATIVO, AGUARDE..."
    ShellBot.sendDocument --chat_id ${callback_query_message_chat_id} \
        --document "/etc/app/LSVPN1054apk" \
    return 0
}

#informacoes usuario
infouser () {
	ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
	--text "$(echo -e "Nome:  ${message_from_first_name[$(ShellBot.ListUpdates)]}\nUser: @${message_from_username[$(ShellBot.ListUpdates)]:-null}")\nID: <code>${message_from_id[$(ShellBot.ListUpdates)]}</code> " \
	--parse_mode html
	return 0
}

#comandos
comand () {
	local msg
	msg="▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n"
	msg+="       <b>🔦 COMANDOS 🔦</b>\n"
	msg+="▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\n"
	msg+="/start - Boas Vindas!\n"
	msg+="/teste ou /menu - Menu Principal\n"
	msg+="/info ou /id - Seu ID\n"
	
	if [[ -n ${callback_query_id[$id]} ]]; then
		[[ -n ${message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${message_id[$id]}
		[[ -n ${callback_query_message_message_id[$id]} ]] && ShellBot.deleteMessage --chat_id ${callback_query_message_chat_id[$id]} --message_id ${callback_query_message_message_id[$id]}

        	# Envia mensagem utilizando o callback_query_message_chat_id
		ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
		    --text "$(echo -e $msg)" \
		    --parse_mode html
	else
		# Envia mensagem utilizando o chat_id
		ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
		    --text "$(echo -e $msg)" \
		    --parse_mode html
		    return 0
    	fi
	return 0
}

unset botao1
botao1=''
unset botao2
botao2=''
unset botao3
botao3=''
ShellBot.InlineKeyboardButton --button 'botao1' --line 1 --text '🟠 TESTE SERVIDOR BR 🟠' --callback_data 'testebr'
ShellBot.InlineKeyboardButton --button 'botao1' --line 2 --text '🟣 TESTE SERVIDOR BR 2 PREMIUM 🟣' --callback_data 'testebr2'
ShellBot.InlineKeyboardButton --button 'botao1' --line 3 --text '📥 BAIXAR APLICATIVO 📥' --callback_data '3' --url 'http://bit.ly/LSVPN1054apk'
ShellBot.InlineKeyboardButton --button 'botao1' --line 4 --text '💳 COMPRAR ACESSO 💳' --callback_data 'compra'
ShellBot.InlineKeyboardButton --button 'botao1' --line 5 --text '🔦 COMANDOS 🔦' --callback_data 'comandos'
ShellBot.InlineKeyboardButton --button 'botao1' --line 5 --text '🙋 SUPORTE 🙋' --callback_data '3' --url 'http://bit.ly/LSVPN'

ShellBot.InlineKeyboardButton --button 'botao2' --line 1 --text 'LS ANDROID' --callback_data 'lsand'
ShellBot.InlineKeyboardButton --button 'botao2' --line 1 --text 'LS ANDROID PREMIUM' --callback_data 'lsandp'
ShellBot.InlineKeyboardButton --button 'botao2' --line 2 --text 'LS ANDROID PLUS' --callback_data 'lsandplus'
ShellBot.InlineKeyboardButton --button 'botao2' --line 2 --text 'LS ANDROID PLUS PREMIUM' --callback_data 'lsandplusp'
ShellBot.InlineKeyboardButton --button 'botao2' --line 3 --text '↩️ VOLTAR ' --callback_data 'voltar1'

ShellBot.InlineKeyboardButton --button 'botao3' --line 1 --text '📄 ENVIAR COMPROVANTE 📄' --callback_data '1' --url 'http://bit.ly/LSVPN'
ShellBot.InlineKeyboardButton --button 'botao3' --line 2 --text '↩️ VOLTAR ↩️' --callback_data 'voltar2'

ShellBot.regHandleFunction --function criarteste --callback_data gerarssh
ShellBot.regHandleFunction --function criartestebr --callback_data testebr
ShellBot.regHandleFunction --function criartestebr2 --callback_data testebr2
ShellBot.regHandleFunction --function comand --callback_data comandos
ShellBot.regHandleFunction --function comprar --callback_data compra
ShellBot.regHandleFunction --function lsandroid --callback_data lsand
ShellBot.regHandleFunction --function lsandroidp --callback_data lsandp
ShellBot.regHandleFunction --function lsandroidplus --callback_data lsandplus
ShellBot.regHandleFunction --function lsandroidplusp --callback_data lsandplusp
ShellBot.regHandleFunction --function teste --callback_data voltar1
ShellBot.regHandleFunction --function comprar --callback_data voltar2

unset keyboard1
keyboard1="$(ShellBot.InlineKeyboardMarkup -b 'botao1')"

unset keyboard2
keyboard2="$(ShellBot.InlineKeyboardMarkup -b 'botao2')"

unset keyboard3
keyboard3="$(ShellBot.InlineKeyboardMarkup -b 'botao3')"

while :; do
  ShellBot.getUpdates --limit 100 --offset $(ShellBot.OffsetNext) --timeout 30
  for id in $(ShellBot.ListUpdates); do
    (
      ShellBot.watchHandle --callback_data ${callback_query_data[$id]}
      comando=(${message_text[$id]})
      [[ "${comando[0]}" = "/start" ]] && menu
      [[ "${comando[0]}" = "/teste" || "${comando[0]}" = "/menu" ]] && teste
      [[ "${comando[0]}" = "/id" || "${comando[0]}" = "/info" ]] && infouser
    ) &
  done
done
